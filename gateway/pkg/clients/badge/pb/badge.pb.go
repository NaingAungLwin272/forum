// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.30.0
// 	protoc        v4.23.2
// source: badge.proto

package pb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type BadgeType int32

const (
	BadgeType_none     BadgeType = 0
	BadgeType_qa       BadgeType = 1
	BadgeType_reaction BadgeType = 2
)

// Enum value maps for BadgeType.
var (
	BadgeType_name = map[int32]string{
		0: "none",
		1: "qa",
		2: "reaction",
	}
	BadgeType_value = map[string]int32{
		"none":     0,
		"qa":       1,
		"reaction": 2,
	}
)

func (x BadgeType) Enum() *BadgeType {
	p := new(BadgeType)
	*p = x
	return p
}

func (x BadgeType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (BadgeType) Descriptor() protoreflect.EnumDescriptor {
	return file_badge_proto_enumTypes[0].Descriptor()
}

func (BadgeType) Type() protoreflect.EnumType {
	return &file_badge_proto_enumTypes[0]
}

func (x BadgeType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use BadgeType.Descriptor instead.
func (BadgeType) EnumDescriptor() ([]byte, []int) {
	return file_badge_proto_rawDescGZIP(), []int{0}
}

type Badge struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	XId         string                 `protobuf:"bytes,1,opt,name=_id,json=Id,proto3" json:"_id,omitempty"`
	Name        string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Description string                 `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	Type        BadgeType              `protobuf:"varint,4,opt,name=type,proto3,enum=pb.BadgeType" json:"type,omitempty"`
	Level       int32                  `protobuf:"varint,5,opt,name=level,proto3" json:"level,omitempty"`
	CreatedAt   *timestamppb.Timestamp `protobuf:"bytes,6,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt   *timestamppb.Timestamp `protobuf:"bytes,7,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
}

func (x *Badge) Reset() {
	*x = Badge{}
	if protoimpl.UnsafeEnabled {
		mi := &file_badge_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Badge) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Badge) ProtoMessage() {}

func (x *Badge) ProtoReflect() protoreflect.Message {
	mi := &file_badge_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Badge.ProtoReflect.Descriptor instead.
func (*Badge) Descriptor() ([]byte, []int) {
	return file_badge_proto_rawDescGZIP(), []int{0}
}

func (x *Badge) GetXId() string {
	if x != nil {
		return x.XId
	}
	return ""
}

func (x *Badge) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Badge) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *Badge) GetType() BadgeType {
	if x != nil {
		return x.Type
	}
	return BadgeType_none
}

func (x *Badge) GetLevel() int32 {
	if x != nil {
		return x.Level
	}
	return 0
}

func (x *Badge) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *Badge) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

type CreateBadgeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name        string    `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Description string    `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	Type        BadgeType `protobuf:"varint,3,opt,name=type,proto3,enum=pb.BadgeType" json:"type,omitempty"`
	Level       int32     `protobuf:"varint,4,opt,name=level,proto3" json:"level,omitempty"`
}

func (x *CreateBadgeRequest) Reset() {
	*x = CreateBadgeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_badge_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateBadgeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateBadgeRequest) ProtoMessage() {}

func (x *CreateBadgeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_badge_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateBadgeRequest.ProtoReflect.Descriptor instead.
func (*CreateBadgeRequest) Descriptor() ([]byte, []int) {
	return file_badge_proto_rawDescGZIP(), []int{1}
}

func (x *CreateBadgeRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CreateBadgeRequest) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *CreateBadgeRequest) GetType() BadgeType {
	if x != nil {
		return x.Type
	}
	return BadgeType_none
}

func (x *CreateBadgeRequest) GetLevel() int32 {
	if x != nil {
		return x.Level
	}
	return 0
}

type BadgeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *BadgeRequest) Reset() {
	*x = BadgeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_badge_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BadgeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BadgeRequest) ProtoMessage() {}

func (x *BadgeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_badge_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BadgeRequest.ProtoReflect.Descriptor instead.
func (*BadgeRequest) Descriptor() ([]byte, []int) {
	return file_badge_proto_rawDescGZIP(), []int{2}
}

func (x *BadgeRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type UpdateBadgeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	XId         string     `protobuf:"bytes,1,opt,name=_id,json=Id,proto3" json:"_id,omitempty"`
	Name        *string    `protobuf:"bytes,2,opt,name=name,proto3,oneof" json:"name,omitempty"`
	Description *string    `protobuf:"bytes,3,opt,name=description,proto3,oneof" json:"description,omitempty"`
	Type        *BadgeType `protobuf:"varint,4,opt,name=type,proto3,enum=pb.BadgeType,oneof" json:"type,omitempty"`
	Level       *int32     `protobuf:"varint,5,opt,name=level,proto3,oneof" json:"level,omitempty"`
}

func (x *UpdateBadgeRequest) Reset() {
	*x = UpdateBadgeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_badge_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateBadgeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateBadgeRequest) ProtoMessage() {}

func (x *UpdateBadgeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_badge_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateBadgeRequest.ProtoReflect.Descriptor instead.
func (*UpdateBadgeRequest) Descriptor() ([]byte, []int) {
	return file_badge_proto_rawDescGZIP(), []int{3}
}

func (x *UpdateBadgeRequest) GetXId() string {
	if x != nil {
		return x.XId
	}
	return ""
}

func (x *UpdateBadgeRequest) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *UpdateBadgeRequest) GetDescription() string {
	if x != nil && x.Description != nil {
		return *x.Description
	}
	return ""
}

func (x *UpdateBadgeRequest) GetType() BadgeType {
	if x != nil && x.Type != nil {
		return *x.Type
	}
	return BadgeType_none
}

func (x *UpdateBadgeRequest) GetLevel() int32 {
	if x != nil && x.Level != nil {
		return *x.Level
	}
	return 0
}

type GetBadgesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Page  *int64 `protobuf:"varint,1,opt,name=page,proto3,oneof" json:"page,omitempty"`
	Limit *int64 `protobuf:"varint,2,opt,name=limit,proto3,oneof" json:"limit,omitempty"`
}

func (x *GetBadgesRequest) Reset() {
	*x = GetBadgesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_badge_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetBadgesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetBadgesRequest) ProtoMessage() {}

func (x *GetBadgesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_badge_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetBadgesRequest.ProtoReflect.Descriptor instead.
func (*GetBadgesRequest) Descriptor() ([]byte, []int) {
	return file_badge_proto_rawDescGZIP(), []int{4}
}

func (x *GetBadgesRequest) GetPage() int64 {
	if x != nil && x.Page != nil {
		return *x.Page
	}
	return 0
}

func (x *GetBadgesRequest) GetLimit() int64 {
	if x != nil && x.Limit != nil {
		return *x.Limit
	}
	return 0
}

type BadgeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Badge *Badge `protobuf:"bytes,1,opt,name=badge,proto3" json:"badge,omitempty"`
}

func (x *BadgeResponse) Reset() {
	*x = BadgeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_badge_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BadgeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BadgeResponse) ProtoMessage() {}

func (x *BadgeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_badge_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BadgeResponse.ProtoReflect.Descriptor instead.
func (*BadgeResponse) Descriptor() ([]byte, []int) {
	return file_badge_proto_rawDescGZIP(), []int{5}
}

func (x *BadgeResponse) GetBadge() *Badge {
	if x != nil {
		return x.Badge
	}
	return nil
}

type BadgeResponseList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Badges []*Badge `protobuf:"bytes,1,rep,name=badges,proto3" json:"badges,omitempty"`
}

func (x *BadgeResponseList) Reset() {
	*x = BadgeResponseList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_badge_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BadgeResponseList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BadgeResponseList) ProtoMessage() {}

func (x *BadgeResponseList) ProtoReflect() protoreflect.Message {
	mi := &file_badge_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BadgeResponseList.ProtoReflect.Descriptor instead.
func (*BadgeResponseList) Descriptor() ([]byte, []int) {
	return file_badge_proto_rawDescGZIP(), []int{6}
}

func (x *BadgeResponseList) GetBadges() []*Badge {
	if x != nil {
		return x.Badges
	}
	return nil
}

type DeleteBadgeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success bool `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
}

func (x *DeleteBadgeResponse) Reset() {
	*x = DeleteBadgeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_badge_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteBadgeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteBadgeResponse) ProtoMessage() {}

func (x *DeleteBadgeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_badge_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteBadgeResponse.ProtoReflect.Descriptor instead.
func (*DeleteBadgeResponse) Descriptor() ([]byte, []int) {
	return file_badge_proto_rawDescGZIP(), []int{7}
}

func (x *DeleteBadgeResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

var File_badge_proto protoreflect.FileDescriptor

var file_badge_proto_rawDesc = []byte{
	0x0a, 0x0b, 0x62, 0x61, 0x64, 0x67, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x02, 0x70,
	0x62, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x22, 0xfd, 0x01, 0x0a, 0x05, 0x42, 0x61, 0x64, 0x67, 0x65, 0x12, 0x0f, 0x0a, 0x03,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x49, 0x64, 0x12, 0x12, 0x0a,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x21, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x0d, 0x2e, 0x70, 0x62, 0x2e, 0x42, 0x61, 0x64, 0x67, 0x65, 0x54, 0x79, 0x70, 0x65,
	0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x39, 0x0a, 0x0a,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x39, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64,
	0x41, 0x74, 0x22, 0x83, 0x01, 0x0a, 0x12, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x42, 0x61, 0x64,
	0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a,
	0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x21, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0d, 0x2e,
	0x70, 0x62, 0x2e, 0x42, 0x61, 0x64, 0x67, 0x65, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79,
	0x70, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x05, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x22, 0x1e, 0x0a, 0x0c, 0x42, 0x61, 0x64, 0x67,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0xd4, 0x01, 0x0a, 0x12, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x42, 0x61, 0x64, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x0f, 0x0a, 0x03, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x49, 0x64,
	0x12, 0x17, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00,
	0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x88, 0x01, 0x01, 0x12, 0x25, 0x0a, 0x0b, 0x64, 0x65, 0x73,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x48, 0x01,
	0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x88, 0x01, 0x01,
	0x12, 0x26, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0d,
	0x2e, 0x70, 0x62, 0x2e, 0x42, 0x61, 0x64, 0x67, 0x65, 0x54, 0x79, 0x70, 0x65, 0x48, 0x02, 0x52,
	0x04, 0x74, 0x79, 0x70, 0x65, 0x88, 0x01, 0x01, 0x12, 0x19, 0x0a, 0x05, 0x6c, 0x65, 0x76, 0x65,
	0x6c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x48, 0x03, 0x52, 0x05, 0x6c, 0x65, 0x76, 0x65, 0x6c,
	0x88, 0x01, 0x01, 0x42, 0x07, 0x0a, 0x05, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x42, 0x0e, 0x0a, 0x0c,
	0x5f, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x07, 0x0a, 0x05,
	0x5f, 0x74, 0x79, 0x70, 0x65, 0x42, 0x08, 0x0a, 0x06, 0x5f, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x22,
	0x59, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x42, 0x61, 0x64, 0x67, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x48, 0x00, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x88, 0x01, 0x01, 0x12, 0x19, 0x0a, 0x05,
	0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x48, 0x01, 0x52, 0x05, 0x6c,
	0x69, 0x6d, 0x69, 0x74, 0x88, 0x01, 0x01, 0x42, 0x07, 0x0a, 0x05, 0x5f, 0x70, 0x61, 0x67, 0x65,
	0x42, 0x08, 0x0a, 0x06, 0x5f, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x22, 0x30, 0x0a, 0x0d, 0x42, 0x61,
	0x64, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1f, 0x0a, 0x05, 0x62,
	0x61, 0x64, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x70, 0x62, 0x2e,
	0x42, 0x61, 0x64, 0x67, 0x65, 0x52, 0x05, 0x62, 0x61, 0x64, 0x67, 0x65, 0x22, 0x36, 0x0a, 0x11,
	0x42, 0x61, 0x64, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4c, 0x69, 0x73,
	0x74, 0x12, 0x21, 0x0a, 0x06, 0x62, 0x61, 0x64, 0x67, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x09, 0x2e, 0x70, 0x62, 0x2e, 0x42, 0x61, 0x64, 0x67, 0x65, 0x52, 0x06, 0x62, 0x61,
	0x64, 0x67, 0x65, 0x73, 0x22, 0x2f, 0x0a, 0x13, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x42, 0x61,
	0x64, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73,
	0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75,
	0x63, 0x63, 0x65, 0x73, 0x73, 0x2a, 0x2b, 0x0a, 0x09, 0x42, 0x61, 0x64, 0x67, 0x65, 0x54, 0x79,
	0x70, 0x65, 0x12, 0x08, 0x0a, 0x04, 0x6e, 0x6f, 0x6e, 0x65, 0x10, 0x00, 0x12, 0x06, 0x0a, 0x02,
	0x71, 0x61, 0x10, 0x01, 0x12, 0x0c, 0x0a, 0x08, 0x72, 0x65, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x10, 0x02, 0x32, 0xb1, 0x02, 0x0a, 0x0c, 0x42, 0x61, 0x64, 0x67, 0x65, 0x53, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x12, 0x3a, 0x0a, 0x0b, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x42, 0x61, 0x64,
	0x67, 0x65, 0x12, 0x16, 0x2e, 0x70, 0x62, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x42, 0x61,
	0x64, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x11, 0x2e, 0x70, 0x62, 0x2e,
	0x42, 0x61, 0x64, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12,
	0x31, 0x0a, 0x08, 0x47, 0x65, 0x74, 0x42, 0x61, 0x64, 0x67, 0x65, 0x12, 0x10, 0x2e, 0x70, 0x62,
	0x2e, 0x42, 0x61, 0x64, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x11, 0x2e,
	0x70, 0x62, 0x2e, 0x42, 0x61, 0x64, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x00, 0x12, 0x3a, 0x0a, 0x09, 0x47, 0x65, 0x74, 0x42, 0x61, 0x64, 0x67, 0x65, 0x73, 0x12,
	0x14, 0x2e, 0x70, 0x62, 0x2e, 0x47, 0x65, 0x74, 0x42, 0x61, 0x64, 0x67, 0x65, 0x73, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x15, 0x2e, 0x70, 0x62, 0x2e, 0x42, 0x61, 0x64, 0x67, 0x65,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x00, 0x12, 0x3a,
	0x0a, 0x0b, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x42, 0x61, 0x64, 0x67, 0x65, 0x12, 0x16, 0x2e,
	0x70, 0x62, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x42, 0x61, 0x64, 0x67, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x11, 0x2e, 0x70, 0x62, 0x2e, 0x42, 0x61, 0x64, 0x67, 0x65,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x3a, 0x0a, 0x0b, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x42, 0x61, 0x64, 0x67, 0x65, 0x12, 0x10, 0x2e, 0x70, 0x62, 0x2e, 0x42,
	0x61, 0x64, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x17, 0x2e, 0x70, 0x62,
	0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x42, 0x61, 0x64, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x42, 0x3b, 0x5a, 0x39, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62,
	0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x73, 0x63, 0x6d, 0x2d, 0x64, 0x65, 0x76, 0x31, 0x64, 0x65, 0x76,
	0x35, 0x2f, 0x6d, 0x74, 0x6d, 0x2d, 0x63, 0x6f, 0x6d, 0x6d, 0x75, 0x6e, 0x69, 0x74, 0x79, 0x2d,
	0x66, 0x6f, 0x72, 0x75, 0x6d, 0x2f, 0x62, 0x61, 0x64, 0x67, 0x65, 0x73, 0x5f, 0x72, 0x70, 0x63,
	0x2f, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_badge_proto_rawDescOnce sync.Once
	file_badge_proto_rawDescData = file_badge_proto_rawDesc
)

func file_badge_proto_rawDescGZIP() []byte {
	file_badge_proto_rawDescOnce.Do(func() {
		file_badge_proto_rawDescData = protoimpl.X.CompressGZIP(file_badge_proto_rawDescData)
	})
	return file_badge_proto_rawDescData
}

var file_badge_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_badge_proto_msgTypes = make([]protoimpl.MessageInfo, 8)
var file_badge_proto_goTypes = []interface{}{
	(BadgeType)(0),                // 0: pb.BadgeType
	(*Badge)(nil),                 // 1: pb.Badge
	(*CreateBadgeRequest)(nil),    // 2: pb.CreateBadgeRequest
	(*BadgeRequest)(nil),          // 3: pb.BadgeRequest
	(*UpdateBadgeRequest)(nil),    // 4: pb.UpdateBadgeRequest
	(*GetBadgesRequest)(nil),      // 5: pb.GetBadgesRequest
	(*BadgeResponse)(nil),         // 6: pb.BadgeResponse
	(*BadgeResponseList)(nil),     // 7: pb.BadgeResponseList
	(*DeleteBadgeResponse)(nil),   // 8: pb.DeleteBadgeResponse
	(*timestamppb.Timestamp)(nil), // 9: google.protobuf.Timestamp
}
var file_badge_proto_depIdxs = []int32{
	0,  // 0: pb.Badge.type:type_name -> pb.BadgeType
	9,  // 1: pb.Badge.created_at:type_name -> google.protobuf.Timestamp
	9,  // 2: pb.Badge.updated_at:type_name -> google.protobuf.Timestamp
	0,  // 3: pb.CreateBadgeRequest.type:type_name -> pb.BadgeType
	0,  // 4: pb.UpdateBadgeRequest.type:type_name -> pb.BadgeType
	1,  // 5: pb.BadgeResponse.badge:type_name -> pb.Badge
	1,  // 6: pb.BadgeResponseList.badges:type_name -> pb.Badge
	2,  // 7: pb.BadgeService.CreateBadge:input_type -> pb.CreateBadgeRequest
	3,  // 8: pb.BadgeService.GetBadge:input_type -> pb.BadgeRequest
	5,  // 9: pb.BadgeService.GetBadges:input_type -> pb.GetBadgesRequest
	4,  // 10: pb.BadgeService.UpdateBadge:input_type -> pb.UpdateBadgeRequest
	3,  // 11: pb.BadgeService.DeleteBadge:input_type -> pb.BadgeRequest
	6,  // 12: pb.BadgeService.CreateBadge:output_type -> pb.BadgeResponse
	6,  // 13: pb.BadgeService.GetBadge:output_type -> pb.BadgeResponse
	7,  // 14: pb.BadgeService.GetBadges:output_type -> pb.BadgeResponseList
	6,  // 15: pb.BadgeService.UpdateBadge:output_type -> pb.BadgeResponse
	8,  // 16: pb.BadgeService.DeleteBadge:output_type -> pb.DeleteBadgeResponse
	12, // [12:17] is the sub-list for method output_type
	7,  // [7:12] is the sub-list for method input_type
	7,  // [7:7] is the sub-list for extension type_name
	7,  // [7:7] is the sub-list for extension extendee
	0,  // [0:7] is the sub-list for field type_name
}

func init() { file_badge_proto_init() }
func file_badge_proto_init() {
	if File_badge_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_badge_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Badge); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_badge_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateBadgeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_badge_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BadgeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_badge_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateBadgeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_badge_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetBadgesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_badge_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BadgeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_badge_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BadgeResponseList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_badge_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteBadgeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_badge_proto_msgTypes[3].OneofWrappers = []interface{}{}
	file_badge_proto_msgTypes[4].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_badge_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   8,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_badge_proto_goTypes,
		DependencyIndexes: file_badge_proto_depIdxs,
		EnumInfos:         file_badge_proto_enumTypes,
		MessageInfos:      file_badge_proto_msgTypes,
	}.Build()
	File_badge_proto = out.File
	file_badge_proto_rawDesc = nil
	file_badge_proto_goTypes = nil
	file_badge_proto_depIdxs = nil
}
